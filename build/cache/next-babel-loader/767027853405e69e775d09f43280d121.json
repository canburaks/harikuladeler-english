{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport Layout from \"../components/Layout\";\nimport Card from \"../components/Card\";\nimport Hero from \"../components/Hero\";\nimport CategoryPage from \"./category/[slug]\";\nimport Airdata from \"./api/hello\";\nexport default function Home({\n  linkdata,\n  categorydata,\n  tagdata\n}) {\n  const router = useRouter();\n  const {\n    pathname\n  } = router;\n  console.log(\"home\", pathname);\n  const {\n    0: activeState,\n    1: setActiveState\n  } = useState(\"all\");\n  const existingTags = tagdata.filter(t => t.fields.link);\n  const existingCategories = categorydata.filter(c => c.fields.link);\n  const tagNames = existingTags.map(t => t.fields.name);\n  const categoryNames = existingCategories.map(c => c.fields.name);\n  const favourites = linkdata.filter(link => link.fields.fav === true);\n\n  const getTagNamesById = tagId => tagdata.filter(t => t.id === tagId).map(t => t.fields.name)[0];\n\n  const getLinksByTagName = tagSlug => {\n    const currentTag = existingTags.filter(t => t.fields.slug === tagSlug)[0];\n    const currentLinkIds = currentTag.fields.link;\n    return linkdata.filter(l => currentLinkIds.includes(l.id));\n  };\n\n  const activeLinks = activeState === \"all\" ? favourites : getLinksByTagName(activeState);\n\n  const handleClick = (e, tagname) => {\n    //e.preventDefault()\n    //router.push(tagname)\n    console.log(tagname);\n    setActiveState(tagname);\n  };\n\n  useEffect(() => {\n    window.dataLayer = window.dataLayer || [];\n\n    function gtag() {\n      dataLayer.push(arguments);\n    }\n\n    gtag('js', new Date());\n    gtag('config', 'G-YWQNTGMG9S');\n  }, []);\n  return /*#__PURE__*/_jsxs(Layout, {\n    categories: existingCategories,\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Harikulade Uygulamalar\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      })]\n    }), /*#__PURE__*/_jsx(Hero, {\n      categories: existingCategories\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"Selector\",\n      children: existingTags.map(t => /*#__PURE__*/_jsx(\"input\", {\n        type: \"radio\",\n        title: t.fields.name,\n        value: t.fields.slug,\n        onChange: e => handleClick(e, t.fields.slug),\n        checked: activeState === t.fields.slug,\n        name: \"selector\"\n      }, t.fields.slug))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"section main\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"w-layout-grid grid\",\n        children: activeLinks.map(link => {\n          const tagNames = link.fields.tag.map(tid => getTagNamesById(tid));\n          return /*#__PURE__*/_jsx(Card, {\n            tagNames: tagNames,\n            slug: link.fields.slug,\n            title: link.fields.title,\n            bilgi: link.fields.bilgi,\n            imageUrl: link.fields.imageUrl,\n            url: link.fields.url\n          }, link.id);\n        })\n      })\n    })]\n  });\n}\nexport async function getStaticProps(context) {\n  const {\n    linkdata,\n    categorydata,\n    tagdata\n  } = await Airdata(); //const data = await rawdata.json()\n  //console.log(\"data\", data)\n\n  return {\n    props: {\n      linkdata,\n      categorydata,\n      tagdata\n    } // will be passed to the page component as props\n\n  };\n}","map":null,"metadata":{},"sourceType":"module"}
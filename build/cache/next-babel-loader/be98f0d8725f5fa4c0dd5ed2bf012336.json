{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/Card\";\nimport Airdata from \"../api/hello\";\nimport Hero from \"../../components/Hero\";\n\nconst CategoryPage = ({\n  categorydata,\n  currentCategoryData,\n  tagdata\n}) => {\n  const router = useRouter();\n  const {\n    pathname\n  } = router; //console.log(\"category\", currentCategoryData.links)\n\n  const getTagNames = tagId => tagdata.filter(t => t.id === tagId).map(t => t.fields.name)[0]; //const existingCategories =  categorydata.filter(c => c.fields.link)\n  //const category = categorydata.filter(c => c.fields.slug === pathname)[0]\n\n\n  useEffect(() => {\n    window.dataLayer = window.dataLayer || [];\n\n    function gtag() {\n      dataLayer.push(arguments);\n    }\n\n    gtag('js', new Date());\n    gtag('config', 'G-YWQNTGMG9S');\n  }, []);\n  return /*#__PURE__*/_jsxs(Layout, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [\"Hariukalde \", currentCategoryData.fields.name, \" Uygulama ve Ara\\xE7lar\\u0131 Listesi\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: `Harikulade ${currentCategoryData.fields.name} uygulamaları keşfedebileceğiniz bir platform.`\n      })]\n    }), /*#__PURE__*/_jsx(Hero, {\n      categories: categorydata\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"section main\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"w-layout-grid grid\",\n        children: currentCategoryData.links && currentCategoryData.links.map(link => {\n          //console.log(\"link\", k);\n          const tagNames = link.fields.tag ? link.fields.tag.map(tid => getTagNames(tid)) : []; //console.log(tagNames)\n\n          return /*#__PURE__*/_jsx(Card, {\n            tagNames: tagNames,\n            slug: link.fields.slug,\n            title: link.fields.title,\n            bilgi: link.fields.bilgi,\n            imageUrl: link.fields.imageUrl,\n            url: link.fields.url\n          }, link.id);\n        })\n      })\n    })]\n  });\n};\n\nexport async function getStaticPaths() {\n  const {\n    linkdata,\n    categorydata,\n    tagdata\n  } = await Airdata(); //const existingCategories =  categorydata.filter(c => c.fields.link)\n\n  const paths = categorydata.map(c => ({\n    params: {\n      slug: c.fields.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\n;\nexport async function getStaticProps({\n  params\n}) {\n  const {\n    linkdata,\n    categorydata,\n    tagdata\n  } = await Airdata(); //console.log(\"data\", categorydata)\n  //const existingCategories =  categorydata.filter(c => c.fields.link)\n\n  var currentCategory = categorydata.filter(c => c.fields.slug === params.slug)[0];\n  var currentLinks = linkdata.filter(l => currentCategory.fields.link.includes(l.id));\n  currentCategory.links = currentLinks;\n  var currentCategoryData = currentCategory; //const categoryAndLinks = categorydata.map(c => {\n  //  if (c.fields.link && c.fields.link.length > 0){\n  //    const belongedLinks = linkdata.filter(l => c.fields.link.includes(l.id) )\n  //    const updatedCategory = {links: belongedLinks, ...c}\n  //    return updatedCategory\n  //  }\n  //})\n  //const data = await rawdata.json()\n  //console.log(\"data\", params)\n\n  return {\n    props: {\n      categorydata,\n      currentCategoryData,\n      tagdata\n    } // will be passed to the page component as props\n\n  };\n}\nexport default CategoryPage;","map":null,"metadata":{},"sourceType":"module"}
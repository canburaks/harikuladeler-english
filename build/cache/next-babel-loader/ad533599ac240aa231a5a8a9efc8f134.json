{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cbs/Projects/Github/harikuladeler-folder/harikuladeler-english/pages/category/[slug].js\";\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/Card\";\nimport Airdata from \"../api/hello\";\nimport Hero from \"../../components/Hero\";\n\nconst CategoryPage = ({\n  categorydata,\n  currentCategoryData,\n  tagdata\n}) => {\n  const router = useRouter();\n  const {\n    pathname\n  } = router; //console.log(\"category\", currentCategoryData.links)\n\n  const getTagNames = tagId => tagdata.filter(t => t.id === tagId).map(t => t.fields.name)[0]; //const existingCategories =  categorydata.filter(c => c.fields.link)\n  //const category = categorydata.filter(c => c.fields.slug === pathname)[0]\n  //useEffect(() => {\n  //  window.dataLayer = window.dataLayer || [];\n  //  function gtag(){dataLayer.push(arguments)}\n  //  gtag('js', new Date());\n  //  gtag('config', 'G-YWQNTGMG9S');\n  //},[])\n\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Awesome \", currentCategoryData.fields.name, \" Apps and Tools\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: `Awesome ${currentCategoryData.fields.name} apps and tools.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {\n      categories: categorydata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-layout-grid grid\",\n        children: currentCategoryData.links && currentCategoryData.links.map(link => {\n          //console.log(\"link\", k);\n          const tagNames = link.fields.tag ? link.fields.tag.map(tid => getTagNames(tid)) : []; //console.log(tagNames)\n\n          return /*#__PURE__*/_jsxDEV(Card, {\n            tagNames: tagNames,\n            slug: link.fields.slug,\n            title: link.fields.title,\n            bilgi: link.fields.bilgi,\n            imageUrl: link.fields.imageUrl,\n            url: link.fields.url\n          }, link.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const {\n    linkdata,\n    categorydata,\n    tagdata\n  } = await Airdata(); //const existingCategories =  categorydata.filter(c => c.fields.link)\n\n  const paths = categorydata.map(c => ({\n    params: {\n      slug: c.fields.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\n;\nexport async function getStaticProps({\n  params\n}) {\n  const {\n    linkdata,\n    categorydata,\n    tagdata\n  } = await Airdata(); //console.log(\"data\", categorydata)\n  //const existingCategories =  categorydata.filter(c => c.fields.link)\n\n  var currentCategory = categorydata.filter(c => c.fields.slug === params.slug)[0];\n  var currentLinks = linkdata.filter(l => currentCategory.fields.link.includes(l.id));\n  currentCategory.links = currentLinks;\n  var currentCategoryData = currentCategory; //const categoryAndLinks = categorydata.map(c => {\n  //  if (c.fields.link && c.fields.link.length > 0){\n  //    const belongedLinks = linkdata.filter(l => c.fields.link.includes(l.id) )\n  //    const updatedCategory = {links: belongedLinks, ...c}\n  //    return updatedCategory\n  //  }\n  //})\n  //const data = await rawdata.json()\n  //console.log(\"data\", params)\n\n  return {\n    props: {\n      categorydata,\n      currentCategoryData,\n      tagdata\n    } // will be passed to the page component as props\n\n  };\n}\nexport default CategoryPage;","map":{"version":3,"sources":["/home/cbs/Projects/Github/harikuladeler-folder/harikuladeler-english/pages/category/[slug].js"],"names":["useEffect","useRouter","Head","Layout","Card","Airdata","Hero","CategoryPage","categorydata","currentCategoryData","tagdata","router","pathname","getTagNames","tagId","filter","t","id","map","fields","name","links","link","tagNames","tag","tid","slug","title","bilgi","imageUrl","url","getStaticPaths","linkdata","paths","c","params","fallback","getStaticProps","currentCategory","currentLinks","l","includes","props"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport Head from 'next/head'\n\nimport Layout from \"../../components/Layout\"\nimport Card from \"../../components/Card\"\nimport Airdata  from \"../api/hello\"\nimport Hero from \"../../components/Hero\"\n\nconst CategoryPage = ({categorydata, currentCategoryData, tagdata}) => {\n    const router = useRouter()\n    const { pathname } = router\n\n    //console.log(\"category\", currentCategoryData.links)\n    \n    const getTagNames = (tagId) => tagdata.filter(t => t.id === tagId).map(t => t.fields.name)[0]\n    //const existingCategories =  categorydata.filter(c => c.fields.link)\n    //const category = categorydata.filter(c => c.fields.slug === pathname)[0]\n    //useEffect(() => {\n    //  window.dataLayer = window.dataLayer || [];\n    //  function gtag(){dataLayer.push(arguments)}\n    //  gtag('js', new Date());\n    //  gtag('config', 'G-YWQNTGMG9S');\n    //},[])\n\n    return (\n    <Layout >\n      <Head>\n        <title>Awesome {currentCategoryData.fields.name} Apps and Tools</title>\n        <meta name=\"description\" content={`Awesome ${currentCategoryData.fields.name} apps and tools.`}></meta>\n        {/* \n        */}\n      </Head>\n      <Hero categories={categorydata} />\n\n        <div className=\"section main\">\n            <div className=\"w-layout-grid grid\">\n            { currentCategoryData.links && currentCategoryData.links.map(link => {\n                //console.log(\"link\", k);\n                const tagNames = link.fields.tag ? link.fields.tag.map( tid => getTagNames(tid)) : []\n                //console.log(tagNames)\n                return ( \n                <Card \n                  key={link.id}\n                  tagNames={tagNames}\n                  slug={link.fields.slug} \n                  title={link.fields.title} \n                  bilgi={link.fields.bilgi}\n                  imageUrl={link.fields.imageUrl}\n                  url={link.fields.url}\n                />\n                )})}\n            </div>\n        </div>\n    </Layout>\n  )\n}\n\nexport async function getStaticPaths() {\n    const {linkdata, categorydata, tagdata } = await Airdata();\n    //const existingCategories =  categorydata.filter(c => c.fields.link)\n\n\n    const paths = categorydata.map(c => ({params:{slug:c.fields.slug}}))\n    return {  paths, fallback: false }\n};\n\n\n\nexport async function getStaticProps({params}) {\n    const {linkdata, categorydata, tagdata } = await Airdata();\n    //console.log(\"data\", categorydata)\n\n    //const existingCategories =  categorydata.filter(c => c.fields.link)\n    var currentCategory = categorydata.filter(c => c.fields.slug === params.slug)[0]\n    var currentLinks = linkdata.filter(l => currentCategory.fields.link.includes(l.id) )\n    currentCategory.links = currentLinks\n    var currentCategoryData = currentCategory\n    //const categoryAndLinks = categorydata.map(c => {\n    //  if (c.fields.link && c.fields.link.length > 0){\n    //    const belongedLinks = linkdata.filter(l => c.fields.link.includes(l.id) )\n    //    const updatedCategory = {links: belongedLinks, ...c}\n    //    return updatedCategory\n    //  }\n    //})\n    //const data = await rawdata.json()\n    //console.log(\"data\", params)\n    return {\n      props: {\n        categorydata,\n        currentCategoryData,\n        tagdata,\n\n      }, // will be passed to the page component as props\n    }\n}\n\n\nexport default CategoryPage"]},"metadata":{},"sourceType":"module"}